diff --git a/lib/app/app_module.dart b/lib/app/app_module.dart
index edd3f43..98e6285 100644
--- a/lib/app/app_module.dart
+++ b/lib/app/app_module.dart
@@ -26,11 +26,10 @@ class AppModule extends Module {
     Bind.singleton((i) => DrawerClassController()),
     Bind.singleton((i) => AppController()),
     Bind.singleton((i) => MapController(i.get(), i.get(), i.get())),
-    Bind.singleton((i) => InfoRepository(i.get<Dio>())),
-    Bind.singleton((i) => TrilhaRepository(
-        i.get<Dio>(), i.get<SharedPrefs>(), i.get<AuthController>())),
     Bind.singleton((i) => AuthRepository(i.get<Dio>())),
     Bind.singleton((i) => AuthController()),
+    Bind.singleton((i) => InfoRepository(i.get<Dio>())),
+    Bind.singleton((i) => TrilhaRepository(i.get<Dio>(), i.get<SharedPrefs>())),
     Bind.singleton((i) => FilterRepository(i.get<Dio>())),
     Bind.singleton((i) => SharedPrefs()),
     Bind.singleton((i) => Dio(BaseOptions(baseUrl: URL_BASE)))
diff --git a/lib/app/modules/map/Components/edicao_trilhas.dart b/lib/app/modules/map/Components/edicao_trilhas.dart
index daa4f48..5f21a46 100644
--- a/lib/app/modules/map/Components/edicao_trilhas.dart
+++ b/lib/app/modules/map/Components/edicao_trilhas.dart
@@ -63,7 +63,7 @@ class _EdicaoTrilhasState extends State<EdicaoTrilhas> {
       alertEdit(context, "Trilha editada com sucesso");
     } else {
       await _infoRepository.uploadTrilha(
-          getTrilha(m.codt).polylineCoordinates,
+          getTrilha(m.codt).polylineCoordinates[0],
           m.nome,
           m.descricao,
           m.tipo,
diff --git a/lib/app/modules/map/map_controller.dart b/lib/app/modules/map/map_controller.dart
index c2058d5..7af7403 100644
--- a/lib/app/modules/map/map_controller.dart
+++ b/lib/app/modules/map/map_controller.dart
@@ -1,4 +1,3 @@
-import 'dart:async';
 import 'dart:math';
 import 'dart:typed_data';
 
@@ -10,7 +9,6 @@ import 'package:biketrilhas_modular/app/shared/info/info_repository.dart';
 import 'package:biketrilhas_modular/app/shared/info/save_trilha.dart';
 import 'package:biketrilhas_modular/app/shared/trilhas/trilha_model.dart';
 import 'package:biketrilhas_modular/app/shared/trilhas/trilha_repository.dart';
-import 'package:biketrilhas_modular/app/shared/trilhas/waypoint_model.dart';
 import 'package:biketrilhas_modular/app/shared/utils/functions.dart';
 import 'package:flutter/material.dart';
 import 'package:flutter/services.dart';
@@ -79,7 +77,6 @@ abstract class _MapControllerBase with Store {
       typeFilter =
           await filterRepository.getFiltered([2], [], [], [], [], [], []);
       trilhasFiltradas = typeFilter;
-      Timer.periodic(Duration(seconds: 15), (Timer t) => checkUpdatesTrilhas());
     } else {
       trilhas = trilhaRepository.getStorageTrilhas().asObservable();
     }
@@ -119,7 +116,7 @@ abstract class _MapControllerBase with Store {
             'Necessitamos da localização do usuário para o funcionamento do aplicativo');
       }
     }
-    var pos = await Geolocator.getCurrentPosition();
+    var pos = await Geolocator.getLastKnownPosition();
     print(pos);
     return pos;
   }
@@ -267,89 +264,7 @@ abstract class _MapControllerBase with Store {
             tappedTrilha == trilha.codt);
   }
 
-  void checkUpdatesTrilhas() async {
-    var result = await trilhaRepository.getUpdatedTrilhas();
-    if (result == null) {
-      return;
-    } else {
-      trilhas.value.addAll(result);
-      getPolylines();
-      state();
-    }
-  }
-
-  Future<void> addWaypoint(context) async {
-    TextEditingController _nameController = TextEditingController();
-    TextEditingController _descController = TextEditingController();
-    DadosWaypointModel model = DadosWaypointModel();
-    await showDialog(
-      context: context,
-      barrierDismissible: false,
-      builder: (context) {
-        return WillPopScope(
-          onWillPop: () async => false,
-          child: AlertDialog(
-            actions: [
-              FlatButton(
-                  child: Text('adicionar'),
-                  onPressed: () {
-                    Navigator.pop(context);
-                    return;
-                  }),
-            ],
-            title: Text("Adicionar Waypoint"),
-            content: Container(
-              height: MediaQuery.of(context).size.height * 0.5,
-              width: MediaQuery.of(context).size.width * 0.7,
-              child: Column(
-                mainAxisAlignment: MainAxisAlignment.spaceAround,
-                children: [
-                  TextField(
-                    controller: _nameController,
-                    onChanged: (value) {
-                      model.nome = value;
-                    },
-                    decoration: InputDecoration(
-                      labelText: 'Nome',
-                      border: OutlineInputBorder(
-                        borderRadius: BorderRadius.circular(15),
-                      ),
-                    ),
-                  ),
-                  ConstrainedBox(
-                    constraints: BoxConstraints(
-                      maxHeight: 300.0,
-                    ),
-                    child: TextField(
-                      controller: _descController,
-                      onChanged: (value) {
-                        model.descricao = value;
-                      },
-                      maxLines: null,
-                      decoration: InputDecoration(
-                        labelText: 'Descricao',
-                        border: OutlineInputBorder(
-                          borderRadius: BorderRadius.circular(15),
-                        ),
-                      ),
-                    ),
-                  ),
-                  // Container()
-                  // OutlineButton(
-                  //   onPressed: () => {},
-                  //   shape: RoundedRectangleBorder(
-                  //       borderRadius: BorderRadius.circular(15)),
-                  // )
-                ],
-              ),
-            ),
-          ),
-        );
-      },
-    );
-  }
-
-  Future<void> nomeTrilha(context) async {
+  Future<String> nomeTrilha(context) async {
     TextEditingController _nameController = TextEditingController();
     await showDialog(
       context: context,
diff --git a/lib/app/modules/map/map_page.dart b/lib/app/modules/map/map_page.dart
index e2646b3..ba3268f 100644
--- a/lib/app/modules/map/map_page.dart
+++ b/lib/app/modules/map/map_page.dart
@@ -379,7 +379,6 @@ class _MapPageState extends ModularState<MapPage, MapController> {
                   color: Colors.blue,
                   onPressed: () {
                     Modular.to.pushNamed('/fotos');
-                    // store.addWaypoint(context);
                   },
                   child: Icon(
                     Icons.camera_alt,
diff --git a/lib/app/shared/info/dados_waypoint_model.dart b/lib/app/shared/info/dados_waypoint_model.dart
index 2e3eb27..bac9815 100644
--- a/lib/app/shared/info/dados_waypoint_model.dart
+++ b/lib/app/shared/info/dados_waypoint_model.dart
@@ -8,5 +8,5 @@ class DadosWaypointModel {
   List<String> imagens = [];
 
   DadosWaypointModel(
-      {this.codwp, this.codt, this.nome, this.descricao, this.numImagens});
+      this.codwp, this.codt, this.nome, this.descricao, this.numImagens);
 }
diff --git a/lib/app/shared/info/info_repository.dart b/lib/app/shared/info/info_repository.dart
index 19ce179..b44b06b 100644
--- a/lib/app/shared/info/info_repository.dart
+++ b/lib/app/shared/info/info_repository.dart
@@ -3,6 +3,7 @@ import 'package:biketrilhas_modular/app/shared/auth/auth_controller.dart';
 import 'package:biketrilhas_modular/app/shared/info/dados_trilha_model.dart';
 import 'package:biketrilhas_modular/app/shared/info/dados_waypoint_model.dart';
 import 'package:biketrilhas_modular/app/shared/info/models.dart';
+import 'package:biketrilhas_modular/app/shared/trilhas/trilha_model.dart';
 import 'package:biketrilhas_modular/app/shared/utils/functions.dart';
 import 'package:dio/dio.dart';
 import 'package:flutter_modular/flutter_modular.dart';
@@ -254,7 +255,7 @@ class InfoRepository {
   }
 
   Future<int> uploadTrilha(
-      List<List<LatLng>> geometria,
+      List<LatLng> geometria,
       String nome,
       String descricao,
       String tipo,
@@ -271,7 +272,6 @@ class InfoRepository {
     List<int> supInt = [];
     List<int> baiInt = [];
     List<int> regInt = [];
-    List<String> geoList = [];
     tipCod = (tipo == 'Ciclovia')
         ? 2
         : (tipo == 'Trilha')
@@ -314,15 +314,12 @@ class InfoRepository {
     }
     if (subtipInt == null) subtipInt = 1;
 
-    for (var geoponto in geometria) {
-      var geoString = "";
-      for (var ponto in geoponto) {
-        if (geoString != "") {
-          geoString += ", ";
-        }
-        geoString += "${ponto.longitude} ${ponto.latitude}";
+    var geoString = "";
+    for (var ponto in geometria) {
+      if (geoString != "") {
+        geoString += ", ";
       }
-      geoList.add(geoString);
+      geoString += "${ponto.longitude} ${ponto.latitude}";
     }
 
     var result = (await dio.post('/server/trilhatemp', data: {
@@ -337,9 +334,12 @@ class InfoRepository {
       "bairros": baiInt,
       "regioes": regInt,
       "subtip_cod": subtipInt,
-      "geometria": geoList,
+      "geometria": [geoString],
       "email": auth.user.email
     }));
+    if (result.statusCode < 300) {
+      mapController.trilhas.value.add(TrilhaModel(result.data, nome));
+    }
     mapController.createdTrails.clear();
     return result.data;
   }
@@ -411,12 +411,8 @@ class InfoRepository {
       var result = (await dio.get('/server/naogeografico',
               queryParameters: {"tipo": "waypoint", "cod": codwp}))
           .data[0];
-      DadosWaypointModel model = DadosWaypointModel(
-          codwp: codwp,
-          codt: result['cod'],
-          nome: result['nome'],
-          descricao: result['descricao'],
-          numImagens: result['numeroDeImagens']);
+      DadosWaypointModel model = DadosWaypointModel(codwp, result['cod'],
+          result['nome'], result['descricao'], result['numeroDeImagens']);
       for (var i = 1; i <= model.numImagens; i++) {
         model.imagens.add(URL_BASE + 'server/byteimage/$i/$codwp');
       }
@@ -434,11 +430,7 @@ class InfoRepository {
 dadosWaypointModelfromJson(json) {
   int numImagens = json['numImagens'];
   DadosWaypointModel model = DadosWaypointModel(
-      codwp: json['codwp'],
-      codt: json['codt'],
-      nome: json['nome'],
-      descricao: json['descricao'],
-      numImagens: numImagens);
+      json['codwp'], json['codt'], json['nome'], json['descricao'], numImagens);
   if (numImagens >= 1) {
     model.imagens = [json['imagens'][0].toString()];
   }
diff --git a/lib/app/shared/info/save_trilha.dart b/lib/app/shared/info/save_trilha.dart
index 12b2ea8..d36b5e1 100644
--- a/lib/app/shared/info/save_trilha.dart
+++ b/lib/app/shared/info/save_trilha.dart
@@ -1,6 +1,4 @@
 import 'package:biketrilhas_modular/app/shared/info/dados_trilha_model.dart';
-import 'package:biketrilhas_modular/app/shared/info/dados_waypoint_model.dart';
-import 'package:biketrilhas_modular/app/shared/info/info_repository.dart';
 import 'package:biketrilhas_modular/app/shared/storage/shared_prefs.dart';
 import 'package:biketrilhas_modular/app/shared/utils/functions.dart';
 
diff --git a/lib/app/shared/trilhas/trilha_repository.dart b/lib/app/shared/trilhas/trilha_repository.dart
index eafd63a..1a4fa30 100644
--- a/lib/app/shared/trilhas/trilha_repository.dart
+++ b/lib/app/shared/trilhas/trilha_repository.dart
@@ -15,9 +15,8 @@ class TrilhaRepository {
   List<int> savedCods = [];
   final Dio dio;
   final SharedPrefs sharedPrefs;
-  final AuthController auth;
 
-  TrilhaRepository(this.dio, this.sharedPrefs, this.auth);
+  TrilhaRepository(this.dio, this.sharedPrefs);
   SavedTrilhas savedTrilhas;
   SavedRoutes savedRoutes;
   SavedRoutes recordedTrails;
@@ -317,50 +316,4 @@ class TrilhaRepository {
     } catch (e) {}
     return list;
   }
-
-  Future<List<TrilhaModel>> getUpdatedTrilhas() async {
-    var cods = (await dio.get('/server/update/${auth.user.email}')).data;
-    if (cods.isEmpty) {
-      return null;
-    }
-    List<TrilhaModel> list;
-    List<String> nomes = [];
-    var layercod = 0;
-    var layers = await dio.put("/server/layer",
-        data: {"codt": cods}).timeout(Duration(seconds: 5));
-    for (var cod in cods) {
-      nomes.add((await dio.get('/server/naogeografico',
-              queryParameters: {"tipo": "trilha", "cod": cod}))
-          .data['nome']);
-    }
-
-    for (var i = 0; i < cods.length; i++) {
-      List<List<LatLng>> line = [];
-      TrilhaModel model = TrilhaModel(
-        cods[i],
-        nomes[i],
-      );
-      var point = layers.data[layercod];
-      var lat = point["latitudeTrilha"];
-      var lon = point["longitudeTrilha"];
-      for (var i = 0; i < lat.length; i++) {
-        if (lat[i] == 0.0) {
-          line.add([]);
-        } else {
-          line.last.add(LatLng(lat[i], lon[i]));
-        }
-      }
-      model.polylineCoordinates = line;
-      var codwp = point["codwp"];
-      var latwp = point["latitudeWaypoint"];
-      var lonwp = point["longitudeWaypoint"];
-      for (var i = 0; i < (codwp as List).length; i++) {
-        model.waypoints.add(WaypointModel(
-            codigo: codwp[i], posicao: LatLng(latwp[i], lonwp[i])));
-      }
-      list.add(model);
-      layercod++;
-    }
-    return list;
-  }
 }
